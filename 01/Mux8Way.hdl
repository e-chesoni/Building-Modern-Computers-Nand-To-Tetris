//File name: projects/01/Mux8Way.hdl

/**
 * 8-Way Multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       c if sel == 010
 *       d if sel == 011
 *       e if sel == 100
 *       f if sel == 101
 *       g if sel == 110
 *       h if sel == 111
 */

CHIP Mux8Way {
    IN a, b, c, d, e, f, g, h, sel[3];
    OUT out;

    PARTS:
    Not (in=sel[0], out=notsel0);
    Not (in=sel[1], out=notsel1);
    Not (in=sel[2], out= notsel2);

    And (a=notsel0, b=notsel1, out=sel00);
    And (a=sel[0], b=notsel1, out=sel01);
    And (a=notsel0, b=sel[1], out=sel10);
    And (a=sel[0], b=sel[1], out=sel11);

    And (a=sel00, b=notsel2, out=sel000);
    And (a=sel01, b=notsel2, out=sel001);
    And (a=sel10, b=notsel2, out=sel010);
    And (a=sel11, b=notsel2, out=sel011);
    And (a=sel00, b=sel[2], out=sel100);
    And (a=sel01, b=sel[2], out=sel101);
    And (a=sel10, b=sel[2], out=sel110);
    And (a=sel11, b=sel[2], out=sel111);

    And (a=a, b=sel000, out=val1);
    And (a=b, b=sel001, out=val2);
    And (a=c, b=sel010, out=val3);
    And (a=d, b=sel011, out=val4);
    And (a=e, b=sel100, out=val5);
    And (a=f, b=sel101, out=val6);
    And (a=g, b=sel110, out=val7);
    And (a=h, b=sel111, out=val8);

    Or (a=val1, b=val2, out=val1orval2);
    Or (a=val3, b=val4, out=val3orval4);
    Or (a=val5, b=val6, out=val5orval6);
    Or (a=val7, b=val8, out=val7orval8);

    Or (a=val1orval2, b=val3orval4, out=resA);
    Or (a=val5orval6, b=val7orval8, out=resB);

    Or (a=resA, b=resB, out=out);
}